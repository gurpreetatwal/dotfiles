# vi: ft=zsh

view() {
  pygmentize -f 16m -O style=paraiso-dark "$1"
}

json() {
  # need to use subshell otherwise file is empty
  echo "$(jq . "$1")" | tee "$1"
}

screenshot() {
  local 'file';
  file="/tmp/screenshot-$(date '+%Y-%m-%d_%H-%M-%S').png"
  import "$file"
  xclip -selection clipboard -target image/png -i < "${file}"
}

# fasd
if [ "$(command -v fasd)" ]; then
  # taken from: https://github.com/clvv/fasd/blob/master/fasd#L89
  fasd_cd() {
    local '_fasd_ret';
    _fasd_ret="$(fasd -e 'printf %s' "$@")"
    [ -z "$_fasd_ret" ] && return
    [ -d "$_fasd_ret" ] && cd "$_fasd_ret" || printf %s\\n "$_fasd_ret"
  }
fi

# fasd + fzf = <3
if [ "$(command -v fzf)" ] && [ "$(command -v fasd)" ]; then

  # fasd & fzf change directory - jump using `fasd` if given argument, filter output of `fasd` using `fzf` else
  function z {
    [ $# -gt 0 ] && fasd_cd -d "$@" && return
    local 'dir'
    dir="$(fasd -Rdl "$1" | sed "s:$HOME:~:" | fzf -1 -0 --no-sort --no-multi | sed "s:~:$HOME:")" && cd "$dir" || return 1
  }

  # fasd & fzf open vim - open best matched file using `fasd` if given argument, filter output of `fasd` using `fzf` else
  function v {
    [ $# -gt 0 ] && fasd -f -e "$EDITOR" "$@" && return
    local 'file'
    file="$(fasd -Rfl "$1" | sed "s:$HOME:~:" | fzf -0 --no-sort --multi | sed "s:~:$HOME:")" && "$EDITOR" "$file" || return 1
  }

  # fasd & fzf open vim - open best matched file using `fasd` if given argument, filter output of `fasd` using `fzf` else
  function o {
    [ $# -gt 0 ] && fasd -a -e "xdg-open" "$@" && return
    local 'file'
    file="$(fasd -Ral "$1"  | sed "s:$HOME:~:" | fzf -0 --no-sort --no-multi | sed "s:~:$HOME:")" && "xdg-open" "$file" || return 1
  }

fi

#  Jumps to temp directory or if given a name, creates that directory and jumps to it
temp() {
  local 'whereto';
  whereto="$HOME/temp"
  if [[ "$#" == 1 ]]; then
    whereto="$whereto/$1"
    mkdir "$whereto"
  fi
  cd "$whereto" || exit
}
