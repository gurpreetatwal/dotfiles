#!/usr/bin/env bash

LOG_DIR="$XDG_DATA_HOME/hall-monitor"
CONFIG_DIR="$XDG_CONFIG_HOME/hall-monitor"

mkdir -p "$LOG_DIR"

log() {
  echo -e "[$(date)]: $*" >> "$LOG_DIR/log"
}

# Find out the device path to our graphics card:
card_path="/sys$(udevadm info -q path -n /dev/dri/card0)"

# Detect if the monitor is connected and, if so, the monitor's ID:
connected="$(xrandr | grep --perl-regexp --only-matching '^\w+-?.*(?=\sconnected\s\()')"

for xport in $connected; do

  # When using the Intel driver, xrandr reports ports as eDP1, DP1, etc., but
  # the actual hardware reports the ports as eDP-1, DP-1, etc. If the port
  # reported by xrandr does not exist on the card, add a "-" between the letters
  # and digits.
  card_port="$xport"
  if [[ ! -d "$card_path/card0-$xport" ]]; then
    card_port="$(echo $xport | sed -E 's/([A-Za-z]+)([0-9]+)/\1-\2/')"
  fi

  # Get a unique id for the monitor connected
  sha=$(sha1sum "$card_path/card0-$card_port/edid" | cut -f1 -d " ")

  # print the id for debugging
  log "connected" "xport=$xport" "card_port=$card_port" "sha=$sha"

  monitor="$(jq ".\"$sha\"" "$CONFIG_DIR/monitors.json")"

  if test "$monitor" != "null"; then
    log "connected to" "$(jq --raw-output ".name" <(echo "$monitor"))"
     # shellcheck disable=SC2046
     # we want word splitting to occur here
    xrandr --output "$xport" $(jq --raw-output ".setup" <(echo "$monitor"))
  else
    lxrandr
  fi
done

# Turn off all disconnected ports that are still assigned a resolution
# Format of output "DP-1 connected 3840x2160+3840+0...."
disconnected="$(xrandr | grep --perl-regexp --only-matching '^\w+-?.*(?=\sdisconnected\s\d)')"
for port in $disconnected; do
  log "disconnected" "port=$port"
  xrandr --output "$port" --off
done
